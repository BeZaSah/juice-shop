name: Bogazici-DevSecOps-Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-syft:
    name: Build & Syft
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check if Dockerfile exists
        run: |
          if [ -f "Dockerfile" ]; then
            echo "‚úÖ Dockerfile found"
          else
            echo "‚ùå No Dockerfile, creating a simple one..."
            cat <<'EOF' > Dockerfile
            FROM node:16-alpine
            WORKDIR /app
            COPY package*.json ./
            RUN npm install
            COPY . .
            EXPOSE 3000
            CMD ["npm","start"]
            EOF
          fi

      - name: Build Docker image
        run: |
          echo "üî® Building Docker image..."
          docker build -t juice-shop:${{ github.sha }} . || {
            echo "‚ùå Docker build failed, continuing pipeline..."
            exit 0
          }

      - name: Syft SBOM Scan
        uses: anchore/sbom-action@v0.15.3
        with:
          image: "juice-shop:${{ github.sha }}"
          output-file: "sbom.spdx.json"
          format: "spdx-json"
        continue-on-error: true

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sbom-${{ github.run_number }}
          path: sbom.spdx.json
          retention-days: 30

  semgrep-sast:
    name: Run Semgrep SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: |
          echo "üì¶ Installing Semgrep..."
          python -m pip install --upgrade pip
          pip install semgrep

      - name: Run Semgrep scan
        run: |
          echo "üîç Running Semgrep..."
          semgrep --config=auto --json --output=semgrep-report.json || true

      - name: Upload Semgrep Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: semgrep-report-${{ github.run_number }}
          path: semgrep-report.json
          retention-days: 30

  gitleaks-secrets:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --report-format json --report-path gitleaks-report.json || true

      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gitleaks-report-${{ github.run_number }}
          path: gitleaks-report.json
          retention-days: 30

  pipeline-summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [build-and-syft, semgrep-sast, gitleaks-secrets]
    if: always()
    steps:
      - name: Pipeline Summary
        run: |
          echo "## DevSecOps Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Build & SBOM | ${{ needs.build-and-syft.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| SAST (Semgrep) | ${{ needs.semgrep-sast.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Scan (Gitleaks) | ${{ needs.gitleaks-secrets.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "Pipeline completed." >> $GITHUB_STEP_SUMMARY
